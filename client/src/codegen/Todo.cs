// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: todo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Github.Jmlb23.Todo.Server.Codegen {

  /// <summary>Holder for reflection information generated from todo.proto</summary>
  public static partial class TodoReflection {

    #region Descriptor
    /// <summary>File descriptor for todo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TodoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgp0b2RvLnByb3RvEiVjb20uZ2l0aHViLmptbGIyMy50b2RvLnNlcnZlci5j",
            "b2RlZ2VuIjEKBFRvZG8SCgoCaWQYASABKAMSDwoHY29udGVudBgCIAEoCRIM",
            "CgRkb25lGAMgASgIIiwKBUVycm9yEgwKBGNvZGUYASABKAUSFQoNZXJyb3Jf",
            "bWVzc2FnZRgCIAEoCSIaCgdTdWNjZXNzEg8KB21lc3NhZ2UYASABKAkiHAoO",
            "R2V0VG9kb1JlcXVlc3QSCgoCaWQYASABKAMiTAoPR2V0VG9kb1Jlc3BvbnNl",
            "EjkKBHRvZG8YASABKAsyKy5jb20uZ2l0aHViLmptbGIyMy50b2RvLnNlcnZl",
            "ci5jb2RlZ2VuLlRvZG8iFAoSR2V0QWxsVG9kb3NSZXF1ZXN0IlAKE0dldEFs",
            "bFRvZG9zUmVzcG9uc2USOQoEdG9kbxgBIAMoCzIrLmNvbS5naXRodWIuam1s",
            "YjIzLnRvZG8uc2VydmVyLmNvZGVnZW4uVG9kbyJlChFVcGRhdGVUb2RvUmVx",
            "dWVzdBIOCgZ0b2RvSWQYASABKAMSQAoLdG9kb1VwZGF0ZWQYAiABKAsyKy5j",
            "b20uZ2l0aHViLmptbGIyMy50b2RvLnNlcnZlci5jb2RlZ2VuLlRvZG8iogEK",
            "ElVwZGF0ZVRvZG9SZXNwb25zZRJBCgdzdWNjZXNzGAEgASgLMi4uY29tLmdp",
            "dGh1Yi5qbWxiMjMudG9kby5zZXJ2ZXIuY29kZWdlbi5TdWNjZXNzSAASPQoF",
            "ZXJyb3IYAiABKAsyLC5jb20uZ2l0aHViLmptbGIyMy50b2RvLnNlcnZlci5j",
            "b2RlZ2VuLkVycm9ySABCCgoIcmVzcG9uc2UiIwoRUmVtb3ZlVG9kb1JlcXVl",
            "c3QSDgoGdG9kb0lkGAEgASgDIqIBChJSZW1vdmVUb2RvUmVzcG9uc2USQQoH",
            "c3VjY2VzcxgBIAEoCzIuLmNvbS5naXRodWIuam1sYjIzLnRvZG8uc2VydmVy",
            "LmNvZGVnZW4uU3VjY2Vzc0gAEj0KBWVycm9yGAIgASgLMiwuY29tLmdpdGh1",
            "Yi5qbWxiMjMudG9kby5zZXJ2ZXIuY29kZWdlbi5FcnJvckgAQgoKCHJlc3Bv",
            "bnNlIk4KEUNyZWF0ZVRvZG9SZXF1ZXN0EjkKBHRvZG8YASABKAsyKy5jb20u",
            "Z2l0aHViLmptbGIyMy50b2RvLnNlcnZlci5jb2RlZ2VuLlRvZG8iogEKEkNy",
            "ZWF0ZVRvZG9SZXNwb25zZRJBCgdzdWNjZXNzGAEgASgLMi4uY29tLmdpdGh1",
            "Yi5qbWxiMjMudG9kby5zZXJ2ZXIuY29kZWdlbi5TdWNjZXNzSAASPQoFZXJy",
            "b3IYAiABKAsyLC5jb20uZ2l0aHViLmptbGIyMy50b2RvLnNlcnZlci5jb2Rl",
            "Z2VuLkVycm9ySABCCgoIcmVzcG9uc2UymgUKC1RvZG9TZXJ2aWNlEngKB0dl",
            "dFRvZG8SNS5jb20uZ2l0aHViLmptbGIyMy50b2RvLnNlcnZlci5jb2RlZ2Vu",
            "LkdldFRvZG9SZXF1ZXN0GjYuY29tLmdpdGh1Yi5qbWxiMjMudG9kby5zZXJ2",
            "ZXIuY29kZWdlbi5HZXRUb2RvUmVzcG9uc2UShAEKC0dldEFsbFRvZG9zEjku",
            "Y29tLmdpdGh1Yi5qbWxiMjMudG9kby5zZXJ2ZXIuY29kZWdlbi5HZXRBbGxU",
            "b2Rvc1JlcXVlc3QaOi5jb20uZ2l0aHViLmptbGIyMy50b2RvLnNlcnZlci5j",
            "b2RlZ2VuLkdldEFsbFRvZG9zUmVzcG9uc2USgQEKClVwZGF0ZVRvZG8SOC5j",
            "b20uZ2l0aHViLmptbGIyMy50b2RvLnNlcnZlci5jb2RlZ2VuLlVwZGF0ZVRv",
            "ZG9SZXF1ZXN0GjkuY29tLmdpdGh1Yi5qbWxiMjMudG9kby5zZXJ2ZXIuY29k",
            "ZWdlbi5VcGRhdGVUb2RvUmVzcG9uc2USgQEKClJlbW92ZVRvZG8SOC5jb20u",
            "Z2l0aHViLmptbGIyMy50b2RvLnNlcnZlci5jb2RlZ2VuLlJlbW92ZVRvZG9S",
            "ZXF1ZXN0GjkuY29tLmdpdGh1Yi5qbWxiMjMudG9kby5zZXJ2ZXIuY29kZWdl",
            "bi5SZW1vdmVUb2RvUmVzcG9uc2USgQEKCkNyZWF0ZVRvZG8SOC5jb20uZ2l0",
            "aHViLmptbGIyMy50b2RvLnNlcnZlci5jb2RlZ2VuLkNyZWF0ZVRvZG9SZXF1",
            "ZXN0GjkuY29tLmdpdGh1Yi5qbWxiMjMudG9kby5zZXJ2ZXIuY29kZWdlbi5D",
            "cmVhdGVUb2RvUmVzcG9uc2VCKKoCJUNvbS5HaXRodWIuSm1sYjIzLlRvZG8u",
            "U2VydmVyLkNvZGVnZW5iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo), global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo.Parser, new[]{ "Id", "Content", "Done" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Github.Jmlb23.Todo.Server.Codegen.Error), global::Com.Github.Jmlb23.Todo.Server.Codegen.Error.Parser, new[]{ "Code", "ErrorMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Github.Jmlb23.Todo.Server.Codegen.Success), global::Com.Github.Jmlb23.Todo.Server.Codegen.Success.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Github.Jmlb23.Todo.Server.Codegen.GetTodoRequest), global::Com.Github.Jmlb23.Todo.Server.Codegen.GetTodoRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Github.Jmlb23.Todo.Server.Codegen.GetTodoResponse), global::Com.Github.Jmlb23.Todo.Server.Codegen.GetTodoResponse.Parser, new[]{ "Todo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Github.Jmlb23.Todo.Server.Codegen.GetAllTodosRequest), global::Com.Github.Jmlb23.Todo.Server.Codegen.GetAllTodosRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Github.Jmlb23.Todo.Server.Codegen.GetAllTodosResponse), global::Com.Github.Jmlb23.Todo.Server.Codegen.GetAllTodosResponse.Parser, new[]{ "Todo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Github.Jmlb23.Todo.Server.Codegen.UpdateTodoRequest), global::Com.Github.Jmlb23.Todo.Server.Codegen.UpdateTodoRequest.Parser, new[]{ "TodoId", "TodoUpdated" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Github.Jmlb23.Todo.Server.Codegen.UpdateTodoResponse), global::Com.Github.Jmlb23.Todo.Server.Codegen.UpdateTodoResponse.Parser, new[]{ "Success", "Error" }, new[]{ "Response" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Github.Jmlb23.Todo.Server.Codegen.RemoveTodoRequest), global::Com.Github.Jmlb23.Todo.Server.Codegen.RemoveTodoRequest.Parser, new[]{ "TodoId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Github.Jmlb23.Todo.Server.Codegen.RemoveTodoResponse), global::Com.Github.Jmlb23.Todo.Server.Codegen.RemoveTodoResponse.Parser, new[]{ "Success", "Error" }, new[]{ "Response" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Github.Jmlb23.Todo.Server.Codegen.CreateTodoRequest), global::Com.Github.Jmlb23.Todo.Server.Codegen.CreateTodoRequest.Parser, new[]{ "Todo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Github.Jmlb23.Todo.Server.Codegen.CreateTodoResponse), global::Com.Github.Jmlb23.Todo.Server.Codegen.CreateTodoResponse.Parser, new[]{ "Success", "Error" }, new[]{ "Response" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Todo : pb::IMessage<Todo> {
    private static readonly pb::MessageParser<Todo> _parser = new pb::MessageParser<Todo>(() => new Todo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Todo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Github.Jmlb23.Todo.Server.Codegen.TodoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Todo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Todo(Todo other) : this() {
      id_ = other.id_;
      content_ = other.content_;
      done_ = other.done_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Todo Clone() {
      return new Todo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "done" field.</summary>
    public const int DoneFieldNumber = 3;
    private bool done_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Done {
      get { return done_; }
      set {
        done_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Todo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Todo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Content != other.Content) return false;
      if (Done != other.Done) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Done != false) hash ^= Done.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (Done != false) {
        output.WriteRawTag(24);
        output.WriteBool(Done);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (Done != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Todo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Done != false) {
        Done = other.Done;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 24: {
            Done = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Error : pb::IMessage<Error> {
    private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Github.Jmlb23.Todo.Server.Codegen.TodoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error(Error other) : this() {
      code_ = other.code_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error Clone() {
      return new Error(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 2;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Error other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Success : pb::IMessage<Success> {
    private static readonly pb::MessageParser<Success> _parser = new pb::MessageParser<Success>(() => new Success());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Success> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Github.Jmlb23.Todo.Server.Codegen.TodoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Success() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Success(Success other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Success Clone() {
      return new Success(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Success);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Success other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Success other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTodoRequest : pb::IMessage<GetTodoRequest> {
    private static readonly pb::MessageParser<GetTodoRequest> _parser = new pb::MessageParser<GetTodoRequest>(() => new GetTodoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTodoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Github.Jmlb23.Todo.Server.Codegen.TodoReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoRequest(GetTodoRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoRequest Clone() {
      return new GetTodoRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTodoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTodoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTodoRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTodoResponse : pb::IMessage<GetTodoResponse> {
    private static readonly pb::MessageParser<GetTodoResponse> _parser = new pb::MessageParser<GetTodoResponse>(() => new GetTodoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTodoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Github.Jmlb23.Todo.Server.Codegen.TodoReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoResponse(GetTodoResponse other) : this() {
      todo_ = other.todo_ != null ? other.todo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoResponse Clone() {
      return new GetTodoResponse(this);
    }

    /// <summary>Field number for the "todo" field.</summary>
    public const int TodoFieldNumber = 1;
    private global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo todo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo Todo {
      get { return todo_; }
      set {
        todo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTodoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTodoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Todo, other.Todo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (todo_ != null) hash ^= Todo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (todo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Todo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (todo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Todo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTodoResponse other) {
      if (other == null) {
        return;
      }
      if (other.todo_ != null) {
        if (todo_ == null) {
          todo_ = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo();
        }
        Todo.MergeFrom(other.Todo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (todo_ == null) {
              todo_ = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo();
            }
            input.ReadMessage(todo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAllTodosRequest : pb::IMessage<GetAllTodosRequest> {
    private static readonly pb::MessageParser<GetAllTodosRequest> _parser = new pb::MessageParser<GetAllTodosRequest>(() => new GetAllTodosRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllTodosRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Github.Jmlb23.Todo.Server.Codegen.TodoReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllTodosRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllTodosRequest(GetAllTodosRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllTodosRequest Clone() {
      return new GetAllTodosRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllTodosRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllTodosRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllTodosRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetAllTodosResponse : pb::IMessage<GetAllTodosResponse> {
    private static readonly pb::MessageParser<GetAllTodosResponse> _parser = new pb::MessageParser<GetAllTodosResponse>(() => new GetAllTodosResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllTodosResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Github.Jmlb23.Todo.Server.Codegen.TodoReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllTodosResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllTodosResponse(GetAllTodosResponse other) : this() {
      todo_ = other.todo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllTodosResponse Clone() {
      return new GetAllTodosResponse(this);
    }

    /// <summary>Field number for the "todo" field.</summary>
    public const int TodoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo> _repeated_todo_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo.Parser);
    private readonly pbc::RepeatedField<global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo> todo_ = new pbc::RepeatedField<global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo> Todo {
      get { return todo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllTodosResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllTodosResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!todo_.Equals(other.todo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= todo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      todo_.WriteTo(output, _repeated_todo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += todo_.CalculateSize(_repeated_todo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllTodosResponse other) {
      if (other == null) {
        return;
      }
      todo_.Add(other.todo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            todo_.AddEntriesFrom(input, _repeated_todo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateTodoRequest : pb::IMessage<UpdateTodoRequest> {
    private static readonly pb::MessageParser<UpdateTodoRequest> _parser = new pb::MessageParser<UpdateTodoRequest>(() => new UpdateTodoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTodoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Github.Jmlb23.Todo.Server.Codegen.TodoReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodoRequest(UpdateTodoRequest other) : this() {
      todoId_ = other.todoId_;
      todoUpdated_ = other.todoUpdated_ != null ? other.todoUpdated_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodoRequest Clone() {
      return new UpdateTodoRequest(this);
    }

    /// <summary>Field number for the "todoId" field.</summary>
    public const int TodoIdFieldNumber = 1;
    private long todoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TodoId {
      get { return todoId_; }
      set {
        todoId_ = value;
      }
    }

    /// <summary>Field number for the "todoUpdated" field.</summary>
    public const int TodoUpdatedFieldNumber = 2;
    private global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo todoUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo TodoUpdated {
      get { return todoUpdated_; }
      set {
        todoUpdated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTodoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTodoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TodoId != other.TodoId) return false;
      if (!object.Equals(TodoUpdated, other.TodoUpdated)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TodoId != 0L) hash ^= TodoId.GetHashCode();
      if (todoUpdated_ != null) hash ^= TodoUpdated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TodoId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TodoId);
      }
      if (todoUpdated_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TodoUpdated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TodoId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TodoId);
      }
      if (todoUpdated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TodoUpdated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTodoRequest other) {
      if (other == null) {
        return;
      }
      if (other.TodoId != 0L) {
        TodoId = other.TodoId;
      }
      if (other.todoUpdated_ != null) {
        if (todoUpdated_ == null) {
          todoUpdated_ = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo();
        }
        TodoUpdated.MergeFrom(other.TodoUpdated);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TodoId = input.ReadInt64();
            break;
          }
          case 18: {
            if (todoUpdated_ == null) {
              todoUpdated_ = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo();
            }
            input.ReadMessage(todoUpdated_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateTodoResponse : pb::IMessage<UpdateTodoResponse> {
    private static readonly pb::MessageParser<UpdateTodoResponse> _parser = new pb::MessageParser<UpdateTodoResponse>(() => new UpdateTodoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTodoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Github.Jmlb23.Todo.Server.Codegen.TodoReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodoResponse(UpdateTodoResponse other) : this() {
      switch (other.ResponseCase) {
        case ResponseOneofCase.Success:
          Success = other.Success.Clone();
          break;
        case ResponseOneofCase.Error:
          Error = other.Error.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodoResponse Clone() {
      return new UpdateTodoResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Github.Jmlb23.Todo.Server.Codegen.Success Success {
      get { return responseCase_ == ResponseOneofCase.Success ? (global::Com.Github.Jmlb23.Todo.Server.Codegen.Success) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Success;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Github.Jmlb23.Todo.Server.Codegen.Error Error {
      get { return responseCase_ == ResponseOneofCase.Error ? (global::Com.Github.Jmlb23.Todo.Server.Codegen.Error) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Error;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      Success = 1,
      Error = 2,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTodoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTodoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Success, other.Success)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.Success) hash ^= Success.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Error) hash ^= Error.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseCase_ == ResponseOneofCase.Success) {
        output.WriteRawTag(10);
        output.WriteMessage(Success);
      }
      if (responseCase_ == ResponseOneofCase.Error) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.Success) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Success);
      }
      if (responseCase_ == ResponseOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTodoResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.Success:
          if (Success == null) {
            Success = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Success();
          }
          Success.MergeFrom(other.Success);
          break;
        case ResponseOneofCase.Error:
          if (Error == null) {
            Error = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Error();
          }
          Error.MergeFrom(other.Error);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Com.Github.Jmlb23.Todo.Server.Codegen.Success subBuilder = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Success();
            if (responseCase_ == ResponseOneofCase.Success) {
              subBuilder.MergeFrom(Success);
            }
            input.ReadMessage(subBuilder);
            Success = subBuilder;
            break;
          }
          case 18: {
            global::Com.Github.Jmlb23.Todo.Server.Codegen.Error subBuilder = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Error();
            if (responseCase_ == ResponseOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveTodoRequest : pb::IMessage<RemoveTodoRequest> {
    private static readonly pb::MessageParser<RemoveTodoRequest> _parser = new pb::MessageParser<RemoveTodoRequest>(() => new RemoveTodoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveTodoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Github.Jmlb23.Todo.Server.Codegen.TodoReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveTodoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveTodoRequest(RemoveTodoRequest other) : this() {
      todoId_ = other.todoId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveTodoRequest Clone() {
      return new RemoveTodoRequest(this);
    }

    /// <summary>Field number for the "todoId" field.</summary>
    public const int TodoIdFieldNumber = 1;
    private long todoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TodoId {
      get { return todoId_; }
      set {
        todoId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveTodoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveTodoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TodoId != other.TodoId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TodoId != 0L) hash ^= TodoId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TodoId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TodoId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TodoId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TodoId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveTodoRequest other) {
      if (other == null) {
        return;
      }
      if (other.TodoId != 0L) {
        TodoId = other.TodoId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TodoId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveTodoResponse : pb::IMessage<RemoveTodoResponse> {
    private static readonly pb::MessageParser<RemoveTodoResponse> _parser = new pb::MessageParser<RemoveTodoResponse>(() => new RemoveTodoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveTodoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Github.Jmlb23.Todo.Server.Codegen.TodoReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveTodoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveTodoResponse(RemoveTodoResponse other) : this() {
      switch (other.ResponseCase) {
        case ResponseOneofCase.Success:
          Success = other.Success.Clone();
          break;
        case ResponseOneofCase.Error:
          Error = other.Error.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveTodoResponse Clone() {
      return new RemoveTodoResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Github.Jmlb23.Todo.Server.Codegen.Success Success {
      get { return responseCase_ == ResponseOneofCase.Success ? (global::Com.Github.Jmlb23.Todo.Server.Codegen.Success) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Success;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Github.Jmlb23.Todo.Server.Codegen.Error Error {
      get { return responseCase_ == ResponseOneofCase.Error ? (global::Com.Github.Jmlb23.Todo.Server.Codegen.Error) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Error;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      Success = 1,
      Error = 2,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveTodoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveTodoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Success, other.Success)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.Success) hash ^= Success.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Error) hash ^= Error.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseCase_ == ResponseOneofCase.Success) {
        output.WriteRawTag(10);
        output.WriteMessage(Success);
      }
      if (responseCase_ == ResponseOneofCase.Error) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.Success) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Success);
      }
      if (responseCase_ == ResponseOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveTodoResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.Success:
          if (Success == null) {
            Success = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Success();
          }
          Success.MergeFrom(other.Success);
          break;
        case ResponseOneofCase.Error:
          if (Error == null) {
            Error = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Error();
          }
          Error.MergeFrom(other.Error);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Com.Github.Jmlb23.Todo.Server.Codegen.Success subBuilder = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Success();
            if (responseCase_ == ResponseOneofCase.Success) {
              subBuilder.MergeFrom(Success);
            }
            input.ReadMessage(subBuilder);
            Success = subBuilder;
            break;
          }
          case 18: {
            global::Com.Github.Jmlb23.Todo.Server.Codegen.Error subBuilder = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Error();
            if (responseCase_ == ResponseOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTodoRequest : pb::IMessage<CreateTodoRequest> {
    private static readonly pb::MessageParser<CreateTodoRequest> _parser = new pb::MessageParser<CreateTodoRequest>(() => new CreateTodoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTodoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Github.Jmlb23.Todo.Server.Codegen.TodoReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoRequest(CreateTodoRequest other) : this() {
      todo_ = other.todo_ != null ? other.todo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoRequest Clone() {
      return new CreateTodoRequest(this);
    }

    /// <summary>Field number for the "todo" field.</summary>
    public const int TodoFieldNumber = 1;
    private global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo todo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo Todo {
      get { return todo_; }
      set {
        todo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTodoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTodoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Todo, other.Todo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (todo_ != null) hash ^= Todo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (todo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Todo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (todo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Todo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTodoRequest other) {
      if (other == null) {
        return;
      }
      if (other.todo_ != null) {
        if (todo_ == null) {
          todo_ = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo();
        }
        Todo.MergeFrom(other.Todo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (todo_ == null) {
              todo_ = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Todo();
            }
            input.ReadMessage(todo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTodoResponse : pb::IMessage<CreateTodoResponse> {
    private static readonly pb::MessageParser<CreateTodoResponse> _parser = new pb::MessageParser<CreateTodoResponse>(() => new CreateTodoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTodoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Github.Jmlb23.Todo.Server.Codegen.TodoReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoResponse(CreateTodoResponse other) : this() {
      switch (other.ResponseCase) {
        case ResponseOneofCase.Success:
          Success = other.Success.Clone();
          break;
        case ResponseOneofCase.Error:
          Error = other.Error.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoResponse Clone() {
      return new CreateTodoResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Github.Jmlb23.Todo.Server.Codegen.Success Success {
      get { return responseCase_ == ResponseOneofCase.Success ? (global::Com.Github.Jmlb23.Todo.Server.Codegen.Success) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Success;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Github.Jmlb23.Todo.Server.Codegen.Error Error {
      get { return responseCase_ == ResponseOneofCase.Error ? (global::Com.Github.Jmlb23.Todo.Server.Codegen.Error) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Error;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      Success = 1,
      Error = 2,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTodoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTodoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Success, other.Success)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.Success) hash ^= Success.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Error) hash ^= Error.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseCase_ == ResponseOneofCase.Success) {
        output.WriteRawTag(10);
        output.WriteMessage(Success);
      }
      if (responseCase_ == ResponseOneofCase.Error) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.Success) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Success);
      }
      if (responseCase_ == ResponseOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTodoResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.Success:
          if (Success == null) {
            Success = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Success();
          }
          Success.MergeFrom(other.Success);
          break;
        case ResponseOneofCase.Error:
          if (Error == null) {
            Error = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Error();
          }
          Error.MergeFrom(other.Error);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Com.Github.Jmlb23.Todo.Server.Codegen.Success subBuilder = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Success();
            if (responseCase_ == ResponseOneofCase.Success) {
              subBuilder.MergeFrom(Success);
            }
            input.ReadMessage(subBuilder);
            Success = subBuilder;
            break;
          }
          case 18: {
            global::Com.Github.Jmlb23.Todo.Server.Codegen.Error subBuilder = new global::Com.Github.Jmlb23.Todo.Server.Codegen.Error();
            if (responseCase_ == ResponseOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
